<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controllable</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>obj_gridMover</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///starting variables 
event_inherited()

global.teleport_goingTo = noone


// to prevent orders being recorded immediately 
pauseTimers[3] = -1
pauseTimers[2] = -1
pauseTimers[1] = -1
pauseTimers[0] = -1


yOfset = -32;
xOfset = 0;

downSprite = spr_controllable
upSprite = spr_controllable
leftSprite = spr_controllable
rightSprite = spr_controllable

sprites[3] = upSprite
sprites[2] = downSprite
sprites[1] = rightSprite
sprites[0] = leftSprite



skipInteraction = false
skipInteractionTimer = -1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inherited event

event_inherited()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set to move on key press

leftKey = keyboard_check(vk_left);
rightKey = keyboard_check(vk_right);
downKey = keyboard_check(vk_down);
upKey = keyboard_check(vk_up);


keys[3] = upKey
keys[2] = downKey
keys[1] = rightKey
keys[0] = leftKey


// this increments the timers if they are running and resets them
// when they run for enough time
for (i = 0; i&lt;4; i+=1){
    if(pauseTimers[i] &gt;= 0){
        pauseTimers[i] += 1
    }
    if(pauseTimers[i] &gt;= gridSize/walkerSpeed){
        pauseTimers[i] = -1
    }
    
    if(keys[i]){
        if(pauseTimers[i]&gt;=0){
            // if pause timers are running don't do jack shit
        } else {
            //if not send the order to move and run the timer
            pauseTimers[i] = 0
            ds_list_insert(orders,0,i);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set depth

depth = -y;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// send interaction signal when needed

interactKey = keyboard_check(ord("X"));

yOfset = 0;
xOfset = 0;
switch (dir){
    case 0:
        xOfset = -gridSize;
        break;
    case 1:
        xOfset = gridSize;
        break;
    case 3:
        yOfset = -gridSize;
        break;
    case 2:
        yOfset = gridSize;
        break;
}

// send signal for interaction to the object
if (interactKey and !instance_exists(obj_textbox)){
    // see if there are any interactable objects in front of you and get its insance id
    instance = instance_position(x+xOfset+gridSize/2,y+yOfset+gridSize/2, obj_interactable)
    if instance != noone {
        if (!skipInteraction){
            skipInteraction = true
            with (instance){
                startInteract = true
            }
        } else {
            skipInteractionTimer = 0
        }
    }
}

if(skipInteractionTimer &gt;= 0){
    skipInteractionTimer += 1
}

if(skipInteractionTimer &gt;= 10){
    skipInteraction = false
    skipInteractionTimer = -1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_interactable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// collusion with interactables
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collusion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// nothing for now
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// debug

draw_self();

//draw_circle(x+xOfset+gridSize/2, y+yOfset+gridSize/2, 8, 3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
